name: AI Code Review (Claude)
on:
  pull_request:
    branches: [main] # base branch đích
    paths:
      - "src/**"
      - "package.json"
      - "vite.config.*"
      - ".eslintrc.*"
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - run: npm i undici
      - name: Install Anthropic SDK (no-save)
        run: npm i --no-save @anthropic-ai/sdk@^0.27.3
      - name: Generate PR diff
        id: diff
        shell: bash
        run: |
          set -euo pipefail

          # Lấy BASE/HEAD SHA: ưu tiên từ sự kiện PR, fallback sang env bạn đã set, rồi tới github.sha
          BASE="${{ github.event.pull_request.base.sha }}"
          HEAD="${{ github.event.pull_request.head.sha }}"
          : "${BASE:=${PR_BASE_SHA:-}}"
            : "${HEAD:=${PR_HEAD_SHA:-${GITHUB_SHA}}}"

            echo "BASE=$BASE"
            echo "HEAD=$HEAD"

          # Đảm bảo có lịch sử để diff
          git fetch --no-tags --depth=1 origin "$BASE" || true
          git fetch --no-tags --depth=1 origin "$HEAD" || true

          # Tạo diff (dùng triple-dot cho so sánh 2 nhánh)
          git diff "$BASE...$HEAD" > pr.diff

          # Nếu vì lý do gì đó diff rỗng/không tạo, vẫn tạo file trống để tránh lỗi "not found"
          test -f pr.diff || : > pr.diff

          # Xuất đường dẫn cho step sau
          echo "diff_path=pr.diff" >> "$GITHUB_OUTPUT"

      - name: Run Claude review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CLAUDE_MODEL: claude-sonnet-4-5
          PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: node scripts/ai-review.js
      - uses: actions/upload-artifact@v4
        with:
          name: ai-review-output
          path: |
            review.md
            issues.json
      - name: Post PR comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: node scripts/post_comment.js
      - name: Create Issues (High/Critical)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: node scripts/create_issues.js
